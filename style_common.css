body {
    font-family: "Arial", "Georgia";
    font-smooth: never;
    max-width: 100vw;
    color: black;
    text-align: justify;
    margin: 15px;
    background-color: white;
}

h1 {
    text-align: center;
}

table {
    width:100%;
}

table, th, td {
    border: 0 solid black;
    border-collapse: collapse;
}

td {
    vertical-align: middle;
}

.mt {
    margin-top: 8px;
}

.flex-row {
    display: flex;
    flex-direction: row;
}

.flex-column {
    display: flex;
    flex-direction: column;
}
[type="checkbox"]{
    font-size: 16px;
}

[type="radio"]{
    width:17px;
    height:17px;
}

.italic {
    font-style: italic;
}

.red {
    color: #c41723;
}

.common_h1{
    text-align:center;
    margin:auto;
    margin-bottom:25px;
    display:block;
    font-size:25px;
    color:#404040;
    font-weight: lighter;
}

h2,
.common_h2{
    font-weight: bold;
    color:#c41723;
    line-height:27px;
    font-variant:petite-caps;
    font-size: 19px;

}

.input_checkbox{
    margin:10px;
    padding:2px;
}

.score_inter,
.score_ref{
    font-variant:petite-caps;
    font-weight: bold;
    background-color: white;
    margin-top:22px;
    font-size: 17px;
}

.description{
    font-size: 15px;
}

.score_result{
    font-size:20px;
    font-weight: bold;
    width:100%;
    text-align: center;

}

.input_score,
.score_result input{
    width:40px;
    height:30px;
    font-size:20px;
    color:#c41723 !important;
    font-weight: bold;
    text-align: center;
}

.score_result div{
    font-size: 15px;
    font-weight: normal;
}

/* QIF */
.form_qif td{
    padding: 2px;
    text-align:center;
}
.form_qif td:first-child{
    text-align:left;
}
.table_qif td{
    text-align: center;
    border:0 solid #FFFFFF;
}
.td_question{
    text-align: left !important;
    padding: 20px 0 20px 0 !important;
}
.tr_question td{
    padding: 7px 3px 3px 0 !important;
}
.info{
    vertical-align: top;
    font-size:15px;
    vertical-align: top;
    color:#444444;
}
.subtitle td{
    text-align:center;
}

.initial {
    display: initial !important;
    margin-left: 9px;
}

.altern_color{
    background-color:#DEDEDE
}

/* ASAS AXIALE */
.bold {
    font-weight: bold;
}

.and {
    color: green;
    margin: 5px;
}

.red {
    color: #c41723;
}

/* ASAS PERIPHERIQUE */
.small {
    font-size: 0.8em;
}

/* DIAGNOSTIC */
fieldset {
    border: none;
    padding: 0;
    margin: 0;
}

#btn-submit-diagnostic {
    border: black solid 1px;
    border-radius: 30px;
    padding: 5px 10px 5px 10px;
    font-size: 0.9em;
    color: black;
}

#text1, #text2 {
    color: #c41723;
    font-size: 1.2em;
}

/* ACR_1997 */
.reponse {
    border: none;
    min-width: 70px;
}

.acr_2010 td{
    vertical-align: center;
    text-align: center;
}

.acr_2010 .score_subtitle{
    text-align:left;
}

.legalinfo{
    font-style: italic;
    color:#666;
}

/**** CUSTOMIZED CHECKBOX ****/

/* Customize the label (the container) */
.containerCb {
    display: block;
    position: relative;
    margin-bottom: 12px;
    cursor: pointer;
    min-width: 150px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    text-align: left;
    padding: 0 0 0 40px;
}

/* Hide the browser's default checkbox */
.containerCb input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}

/* Create a custom checkbox */
.checkmarkCb {
    position: absolute;
    top: 0;
    left: 0;
    height: 25px;
    width: 25px;
    background-color: #eee;
}

/* On mouse-over, add a grey background color */
.containerCb:hover input ~ .checkmarkCb {
    background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.containerCb input:checked ~ .checkmarkCb {
    background-color: #219610;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmarkCb:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the checkmark when checked */
.containerCb input:checked ~ .checkmarkCb:after {
    display: block;
}

/* Style the checkmark/indicator */
.containerCb .checkmarkCb:after {
    left: 9px;
    top: 5px;
    width: 5px;
    height: 10px;
    border: solid white;
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
}




/**** CUSTOMIZED RADIO BUTTON ****/

/* Customize the label (the container) */
.containerRadio {
    display: block;
    position: relative;
    padding-left: 35px;
    margin-bottom: 12px;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

/* Hide the browser's default radio button */
.containerRadio input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}

/* Create a custom radio button */
.checkmarkRadio {
    position: absolute;
    top: 0;
    left: 0;
    height: 25px;
    width: 25px;
    background-color: #eee;
    border-radius: 50%;
}

/* On mouse-over, add a grey background color */
.containerRadio:hover input ~ .checkmarkRadio {
    background-color: #ccc;
}

/* When the radio button is checked, add a blue background */
.containerRadio input:checked ~ .checkmarkRadio {
    background-color: #2196F3;
}

/* Create the indicator (the dot/circle - hidden when not checked) */
.checkmarkRadio:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the indicator (dot/circle) when checked */
.containerRadio input:checked ~ .checkmarkRadio:after {
    display: block;
}

/* Style the indicator (dot/circle) */
.containerRadio .checkmarkRadio:after {
    top: 8px;
    left: 8px;
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: white;
}

.smol {
    max-width: 12px !important;
    min-width: 0 !important;
}

.style1 {
    background-color: lightgray;
    height: 50px;
}

.style2 {
    background-color: #BEBEBE;
    height: 50px;
}
